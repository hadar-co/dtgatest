{
  "version": "2.1.0",
  "$schema": "https://json.schemastore.org/sarif-2.1.0-rtm.5.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "informationUri": "https://github.com/datreeio/datree",
          "name": "datree",
          "rules": [
            {
              "id": "CONTAINERS_MISSING_IMAGE_VALUE_VERSION",
              "shortDescription": {
                "text": "Ensure each container image has a pinned (tag) version"
              },
              "fullDescription": {
                "text": "Incorrect value for key `image` - specify an image version to avoid unpleasant \"version surprises\" in the future"
              },
              "helpUri": "https://hub.datree.io/ensure-image-pinned-version"
            },
            {
              "id": "CONTAINERS_MISSING_MEMORY_LIMIT_KEY",
              "shortDescription": {
                "text": "Ensure each container has a configured memory limit"
              },
              "fullDescription": {
                "text": "Missing property object `limits.memory` - value should be within the accepted boundaries recommended by the organization"
              },
              "helpUri": "https://hub.datree.io/ensure-memory-limit"
            },
            {
              "id": "WORKLOAD_INVALID_LABELS_VALUE",
              "shortDescription": {
                "text": "Ensure workload has valid label values"
              },
              "fullDescription": {
                "text": "Incorrect value for key(s) under `labels` - the vales syntax is not valid so the Kubernetes engine will not accept it"
              },
              "helpUri": "https://hub.datree.io/ensure-labels-value-valid"
            },
            {
              "id": "CONTAINERS_MISSING_LIVENESSPROBE_KEY",
              "shortDescription": {
                "text": "Ensure each container has a configured liveness probe"
              },
              "fullDescription": {
                "text": "Missing property object `livenessProbe` - add a properly configured livenessProbe to catch possible deadlocks"
              },
              "helpUri": "https://hub.datree.io/ensure-liveness-probe"
            },
            {
              "id": "INGRESS_INCORRECT_HOST_VALUE_PERMISSIVE",
              "shortDescription": {
                "text": "Prevent Ingress from forwarding all traffic to a single container"
              },
              "fullDescription": {
                "text": "Incorrect value for key `host` - specify host instead of using a wildcard character (\"*\")"
              },
              "helpUri": "https://hub.datree.io/prevent-ingress-forwarding-traffic-to-single-container"
            }
          ],
          "semanticVersion": "1.0.0"
        }
      },
      "results": [
        {
          "ruleId": "CONTAINERS_MISSING_IMAGE_VALUE_VERSION",
          "ruleIndex": 0,
          "message": {
            "text": "Incorrect value for key `image` - specify an image version to avoid unpleasant \"version surprises\" in the future"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/hadarco/.datree/k8s-demo.yaml"
                },
                "region": {
                  "startLine": 23,
                  "endLine": 18
                }
              }
            }
          ]
        },
        {
          "ruleId": "CONTAINERS_MISSING_IMAGE_VALUE_VERSION",
          "ruleIndex": 0,
          "message": {
            "text": "Incorrect value for key `image` - specify an image version to avoid unpleasant \"version surprises\" in the future"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/hadarco/.datree/k8s-demo.yaml"
                },
                "region": {
                  "startLine": 38,
                  "endLine": 18
                }
              }
            }
          ]
        },
        {
          "ruleId": "CONTAINERS_MISSING_MEMORY_LIMIT_KEY",
          "ruleIndex": 1,
          "message": {
            "text": "Missing property object `limits.memory` - value should be within the accepted boundaries recommended by the organization"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/hadarco/.datree/k8s-demo.yaml"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 15
                }
              }
            }
          ]
        },
        {
          "ruleId": "WORKLOAD_INVALID_LABELS_VALUE",
          "ruleIndex": 2,
          "message": {
            "text": "Incorrect value for key(s) under `labels` - the vales syntax is not valid so the Kubernetes engine will not accept it"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/hadarco/.datree/k8s-demo.yaml"
                },
                "region": {
                  "startLine": 7,
                  "endLine": 12
                }
              }
            }
          ]
        },
        {
          "ruleId": "CONTAINERS_MISSING_LIVENESSPROBE_KEY",
          "ruleIndex": 3,
          "message": {
            "text": "Missing property object `livenessProbe` - add a properly configured livenessProbe to catch possible deadlocks"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/hadarco/.datree/k8s-demo.yaml"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "INGRESS_INCORRECT_HOST_VALUE_PERMISSIVE",
          "ruleIndex": 4,
          "message": {
            "text": "Incorrect value for key `host` - specify host instead of using a wildcard character (\"*\")"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/hadarco/.datree/k8s-demo.yaml"
                },
                "region": {
                  "startLine": 72,
                  "endLine": 11
                }
              }
            }
          ]
        }
      ]
    }
  ]
}


